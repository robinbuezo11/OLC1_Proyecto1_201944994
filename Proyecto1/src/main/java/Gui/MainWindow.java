/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Gui;

import Logic.*;
import java.io.StringReader;
import java.util.LinkedList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Robin
 */
public class MainWindow extends javax.swing.JFrame {
    
    private ManagerFile mfile;
    public static ListNodes nodes;
    public static ListErrors errors;
    public static Regex er;
    private boolean existsautomatons;
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        mfile = new ManagerFile();
        generateAnalysisTools();
        nodes = new ListNodes();
        errors = new ListErrors();
        er = new Regex();
        existsautomatons = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paneltext = new javax.swing.JPanel();
        scrolltext = new javax.swing.JScrollPane();
        txtpanel = new javax.swing.JTextPane();
        scrollconsole = new javax.swing.JScrollPane();
        txtconsole = new javax.swing.JTextPane();
        menubar = new javax.swing.JMenuBar();
        menufile = new javax.swing.JMenu();
        opnew = new javax.swing.JMenuItem();
        opopen = new javax.swing.JMenuItem();
        opsave = new javax.swing.JMenuItem();
        opsaveas = new javax.swing.JMenuItem();
        menuaction = new javax.swing.JMenu();
        opgenautomaton = new javax.swing.JMenuItem();
        opanalyze = new javax.swing.JMenuItem();
        menuhelp = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ExRegan USAC");
        setBounds(new java.awt.Rectangle(0, 0, 1280, 600));
        setResizable(false);

        scrolltext.setViewportView(txtpanel);

        scrollconsole.setViewportView(txtconsole);

        javax.swing.GroupLayout paneltextLayout = new javax.swing.GroupLayout(paneltext);
        paneltext.setLayout(paneltextLayout);
        paneltextLayout.setHorizontalGroup(
            paneltextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrolltext, javax.swing.GroupLayout.DEFAULT_SIZE, 1111, Short.MAX_VALUE)
            .addComponent(scrollconsole)
        );
        paneltextLayout.setVerticalGroup(
            paneltextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneltextLayout.createSequentialGroup()
                .addComponent(scrolltext, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(scrollconsole, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE))
        );

        menufile.setText("Archivo");

        opnew.setText("Nuevo");
        opnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opnewActionPerformed(evt);
            }
        });
        menufile.add(opnew);

        opopen.setText("Abrir");
        opopen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opopenActionPerformed(evt);
            }
        });
        menufile.add(opopen);

        opsave.setText("Guardar");
        opsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opsaveActionPerformed(evt);
            }
        });
        menufile.add(opsave);

        opsaveas.setText("Guardar como");
        opsaveas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opsaveasActionPerformed(evt);
            }
        });
        menufile.add(opsaveas);

        menubar.add(menufile);

        menuaction.setText("Acciones");

        opgenautomaton.setText("Generar Autómatas");
        opgenautomaton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opgenautomatonActionPerformed(evt);
            }
        });
        menuaction.add(opgenautomaton);

        opanalyze.setText("Analizar Entrada");
        opanalyze.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opanalyzeActionPerformed(evt);
            }
        });
        menuaction.add(opanalyze);

        menubar.add(menuaction);

        menuhelp.setText("Ayuda");
        menubar.add(menuhelp);

        setJMenuBar(menubar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paneltext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(paneltext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void opopenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opopenActionPerformed
        open();
    }//GEN-LAST:event_opopenActionPerformed

    private void opsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opsaveActionPerformed
        save();
    }//GEN-LAST:event_opsaveActionPerformed

    private void opsaveasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opsaveasActionPerformed
        saveas();
    }//GEN-LAST:event_opsaveasActionPerformed

    private void opnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opnewActionPerformed
       newText();
    }//GEN-LAST:event_opnewActionPerformed

    private void opgenautomatonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opgenautomatonActionPerformed
        generateAutomatons();
    }//GEN-LAST:event_opgenautomatonActionPerformed

    private void opanalyzeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opanalyzeActionPerformed
        analyzeERS();
    }//GEN-LAST:event_opanalyzeActionPerformed

    //-------------------METODO PARA ABRIR UN NUEVO ARCHIVO------------------------------------   
    private void newText(){
        if(!txtpanel.getText().equals("")){
            if(JOptionPane.showConfirmDialog(this, "¿Desea Guardar el Archivo?", "Guardar", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION) save();
            txtpanel.setText("");
            this.setTitle("ExRegan USAC");
        }
        if(existsautomatons){
            er.clearAll();
            existsautomatons=false;
        }
    }
    
    //---------------------METODO PARA ABRIR UN ARCHIVO----------------------------------------    
    private void open(){
        newText();
        JFileChooser openf = new JFileChooser();
        openf.setAcceptAllFileFilterUsed(false);
        openf.setFileFilter(new FileNameExtensionFilter("OLC", "olc", "OLC"));
        
        if (openf.showOpenDialog(paneltext) == JFileChooser.APPROVE_OPTION){
            try {
                if(mfile.openFile(openf.getSelectedFile())){
                    for (String line: mfile.getData()){
                        if (txtpanel.getText().equals("")){
                            txtpanel.setText(txtpanel.getText()+line);
                        } else {
                            txtpanel.setText(txtpanel.getText()+"\n"+line);
                        }
                    }
                    this.setTitle("ExRegan USAC  -  "+mfile.getFile().getName());
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    //---------------------METODO PARA GUARDAR UN ARCHIVO COMO NUEVO---------------------------
    private void saveas(){
        JFileChooser saveas = new JFileChooser();
        saveas.setFileFilter(new FileNameExtensionFilter("OLC", "olc", "OLC"));
        
        if (saveas.showSaveDialog(paneltext) == JFileChooser.APPROVE_OPTION){
            if(mfile.saveAsFile(saveas.getSelectedFile(), txtpanel.getText())){
                this.setTitle("ExRegan USAC  -  "+mfile.getFile().getName());
            }
        }
    }
    
    //---------------------METODO PARA GUARDAR UN ARCHIVO--------------------------------------
    private void save(){
        // Si el archivo no existe entonces se usa "Guardar Como"
        if(!mfile.getFile().exists()){
            saveas();
        }else{
            if(mfile.saveFile(txtpanel.getText())){
                this.setTitle("ExRegan USAC  -  "+mfile.getFile().getName());
            }
        }
    }
    
    //------------------METODO PARA GENERAR HERRAMIENTAS DE ANÁLISIS---------------------------
    private void generateAnalysisTools(){
        try{
            String path = "src/main/java/Analyzers/";
            String opcFlex[] = {path + "Lexico.jflex","-d",path};
            jflex.Main.generate(opcFlex);
            
            String opcCup[] = {"-destdir",path,"-parser","parser",path + "Sintactico.cup"};
            java_cup.Main.main(opcCup);
        } catch(Exception e){
            System.out.println(e);
        }
    }
    
    //------------------------METODO PARA GENERAR AUTOMATAS------------------------------------
    private void generateAutomatons(){
        try{
            nodes.clearAll();
            errors.clear();
            er.clearAll();
            String data = txtpanel.getText();
            Analyzers.parser parse;
            parse = new Analyzers.parser(new Analyzers.Lexico(new StringReader(data)));
            
            parse.parse();
            LinkedList<String> err = MainWindow.errors.getCodeErrors();
            String patherror = "src/main/java/ERRORES_201944994/";
            if(err.getFirst()!="Y"){
                ManagerFile.createFile("Errores", patherror, ".html", err.getLast());
                txtconsole.setText(txtconsole.getText()+"ERRORES EN EL ANÁLISIS"+"\n");
            }
            existsautomatons=true;
        }catch(Exception e){
            txtconsole.setText(txtconsole.getText()+e.toString()+"\n");
        }
    }
    
    //------------------------METODO PARA ANALIZAR ENTRADAS------------------------------------
    private void analyzeERS(){
        try{
            if(existsautomatons){
                String pathouts = "src/main/java/SALIDAS_201944994/";
                ManagerFile.createFile("Salidas", pathouts, ".json", er.analyzeERS());
            }else{
                JOptionPane.showMessageDialog(this, "Primero debe generar los autómatas", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            }
        }catch(Exception e){
            txtconsole.setText(txtconsole.getText()+e.toString()+"\n");
        }
    }
    
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu menuaction;
    private javax.swing.JMenuBar menubar;
    private javax.swing.JMenu menufile;
    private javax.swing.JMenu menuhelp;
    private javax.swing.JMenuItem opanalyze;
    private javax.swing.JMenuItem opgenautomaton;
    private javax.swing.JMenuItem opnew;
    private javax.swing.JMenuItem opopen;
    private javax.swing.JMenuItem opsave;
    private javax.swing.JMenuItem opsaveas;
    private javax.swing.JPanel paneltext;
    private javax.swing.JScrollPane scrollconsole;
    private javax.swing.JScrollPane scrolltext;
    public static javax.swing.JTextPane txtconsole;
    private javax.swing.JTextPane txtpanel;
    // End of variables declaration//GEN-END:variables
}